@page
@model IndexModel
@{
    ViewData["Title"] = "Expense Tracker";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link rel="stylesheet" href="~/css/site.css" />
    <title>Expense Tracker</title>
</head>
<body>
    <h2>Expense Tracker</h2>

    <div class="container">
        <h4>Your Balance</h4>
        <h1 id="balance">$0.00</h1>

        <div class="inc-exp-container">
            <div>
                <h4>Income</h4>
                <p id="money-plus" class="money plus">+$0.00</p>
            </div>
            <div>
                <h4>Expense</h4>
                <p id="money-minus" class="money minus">-$0.00</p>
            </div>
        </div>

        <h3>History</h3>
        <ul id="list" class="list">
            <!-- <li class="minus">
              Cash <span>-$400</span><button class="delete-btn">x</button>
            </li> -->
        </ul>

        <h3>Add new transaction</h3>
        <form id="form">
            <div class="form-control">
                <label for="text">Text</label>
                <input type="text" id="text" placeholder="Enter text..." />
            </div>
            <div class="form-control">
                <label for="amount">
                    Amount <br />
                    (negative - expense, positive - income)
                </label>
                <input type="number" id="amount" placeholder="Enter amount..." />
            </div>
            <button class="btn">Add transaction</button>
        </form>
    </div>


    <script>
        const balance = document.getElementById('balance');
        const money_plus = document.getElementById('money-plus');
        const money_minus = document.getElementById('money-minus');
        const list = document.getElementById('list');
        const form = document.getElementById('form');
        const text = document.getElementById('text');
        const amount = document.getElementById('amount');

        // const dummyTransactions = [
        //   { id: 1, text: 'Flower', amount: -20 },
        //   { id: 2, text: 'Salary', amount: 300 },
        //   { id: 3, text: 'Book', amount: -10 },
        //   { id: 4, text: 'Camera', amount: 150 }
        // ];

        const localStorageTransactions = JSON.parse(
            localStorage.getItem('transactions')
        );

        const getTransactions = () => {
            var url = '/api/ExpenseModels/';
            fetch(url)
                .then((resp) => resp.json())
                .then(function (data) {
                    transactions = [...data];
                    console.log('Getting transactions: ', transactions);
                    transactions.forEach(addTransactionDOM);
                    updateValues();
                });

        }

        const postTransaction = (transaction) => {
            const url = '/api/ExpenseModels/'
            console.log('postTransaction', url, transaction);
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-type': 'application/json',
                },
                body: JSON.stringify(transaction),
            }
            ).then((res) => res.json())
                .then(function (response) {
                    console.log('after posting, the response from server ', response);

                    transactions.push(response);

                    addTransactionDOM(response);

                    updateValues();             

                    text.value = '';
                    amount.value = '';

            }).catch(() => console.error("error when posting"));

        }

        let transactions = [];
        //    localStorage.getItem('transactions') !== null ? localStorageTransactions : [];

        // Add transaction
        function addTransaction(e) {
            e.preventDefault();

            if (text.value.trim() === '' || amount.value.trim() === '') {
                alert('Please add a text and amount');
            } else {
                const transaction = {
                    id: 0,
                    text: text.value,
                    amount: +amount.value
                };
                
                postTransaction(transaction);

               
            }
        }

        // Generate random ID
        function generateID() {
            return Math.floor(Math.random() * 100000000);
        }

        // Add transactions to DOM list
        function addTransactionDOM(transaction) {
            // Get sign
            const sign = transaction.amount < 0 ? '-' : '+';

            const item = document.createElement('li');

            // Add class based on value
            item.classList.add(transaction.amount < 0 ? 'minus' : 'plus');

            item.innerHTML = `
        ${transaction.text} <span>${sign}${Math.abs(
                transaction.amount
            )}</span> <button class="delete-btn" onclick="removeTransaction(${
                transaction.id
                })">x</button>
      `;

            list.appendChild(item);
        }

        // Update the balance, income and expense
        function updateValues() {
            const amounts = transactions.map(transaction => transaction.amount);

            const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);

            const income = amounts
                .filter(item => item > 0)
                .reduce((acc, item) => (acc += item), 0)
                .toFixed(2);

            const expense = (
                amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *
                -1
            ).toFixed(2);

            balance.innerText = `$${total}`;
            money_plus.innerText = `$${income}`;
            money_minus.innerText = `$${expense}`;
        }

        // Remove transaction by ID
        function removeTransaction(id) {
            transactions = transactions.filter(transaction => transaction.id !== id);
            deleteTransaction(id);            
        }

        // Update local storage transactions
        //function updateLocalStorage() {
        //    localStorage.setItem('transactions', JSON.stringify(transactions));
        //}

        function deleteTransaction(id) {

            const url = '/api/ExpenseModels/' + id;
            console.log('delete', url);
            fetch(url, {
                method: 'DELETE',
                headers: {
                    'Content-type': 'application/json',
                },                
            }
            ).then(function (response) {                
                init();
            }).catch(() => console.error("error when deleting"));

        }

        // Init app
        function init() {
            list.innerHTML = '';
            getTransactions();
        }

        init();
        form.addEventListener('submit', addTransaction);
    </script>
</body>
</html>
